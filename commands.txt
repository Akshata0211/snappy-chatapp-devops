docker network create ak
docker network ls 
docker compose up

docker tag chat-app-frontend ak0211/chat-app-frontend:v1 
docker tag chat-app-backend ak0211/chat-app-backend:v1  
docker push ak0211/chat-app-frontend:v1  
docker push ak0211/chat-app-backend:v1 

minikube addons enable ingress

on eks
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update


kubectl apply -f filename.yml
kubectl get all
minikube service frontend-service

Install EKSCTL
# for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`
ARCH=amd64
PLATFORM=$(uname -s)_$ARCH

curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

# (Optional) Verify checksum
curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz

sudo mv /tmp/eksctl /usr/local/bin

nano ~/.bashrc
. <(eksctl completion bash)


eksctl create cluster --name demo-cluster --region us-east-1 --fargate

aws eks update-kubeconfig --region us-east-1 --name demo-cluster

eksctl create fargateprofile \
    --cluster demo-cluster \
    --region us-east-1 \
    --name alb-sample-app \
    --namespace chat-app

oidc_id=$(aws eks describe-cluster --name demo-cluster --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5) 

eksctl create iamserviceaccount \
  --cluster=demo-cluster \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name AmazonEKSLoadBalancerControllerRole \
  --attach-policy-arn=arn:aws:iam::471024348059:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve

  helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system \
  --set clusterName=demo-cluster \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=us-east-1 \
  --set vpcId=vpc-0cbdd23713649edd3

aws configure set region us-east-1
aws configure list

kubectl delete all --all
kubectl config set-context --current --namespace=chat-app
kubectl get namespaces
kubectl config view --minify | grep namespace:

kubectl exec -it -n chat-app deployment/frontend-deploy -- sh
wget http://chatapp.ak/3000

curl -H "Host: chatapp.ak" http://192.168.49.2/